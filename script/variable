#!/usr/bin/env bash

# interactively build conjur variable creation command
# copyright 2015 Ryan Prior all rights reserved

req () { # `req DEFAULT` notifies in case of required field
    if ! [ -v $1 ]; then
        echo "This field is required.";
    fi
}

default () { # `default DEFAULT VAR` sets VAR to DEFAULT as appropriate
    if [ -v $1 ] && [ -z "${!2}" ]; then
        printf -v $2 "${!1}";
    fi
}

info_fmt="\n%s\nExample: %s\n"

readi () {
    local desc
    local example
    local def
    local def_prompt
    printf -v desc '_cj_%s_desc' "$1"
    printf -v example '_cj_%s_example' "$1"
    printf -v def '_cj_%s_default' "$1"
    if [ -v $def ]; then
        local def_fix="${!def}"
        if [ -z "$def_fix" ]; then def_fix="none"; fi
        printf -v def_prompt '(default %s) ' "${def_fix}"
    fi
    printf "$info_fmt" "${!desc}" "${!example}"
    req $def
    read -e -p "$1: ${def_prompt}" $1
    default $def $1
}

echo "$_cj_variable_create_desc"
echo "$_cj_variable_desc"

readi id
readi group
readi kind

printf "$info_fmt" "$_cj_mimetype_desc" "$_cj_mimetype_example"
# prompt for mime-type
echo "Choose or enter a mime-type"
select mimetype in "text/plain" \
		   "application/json" \
                   "application/xml" \
                   "application/x-yaml" \
                   "application/x-pem-file" \
                   "other"; do
    case "$mimetype" in
	other ) read -e -p "mime-type: " mimetype; break;;
	* ) break;;
    esac
done

# TODO allow prompt for interactive annotations

printf "${info_fmt}Send EOF (ctrl+d) when finished\n" "$_cj_value_desc" "$_cj_value_example"
# prompt for value
echo "value:"
while IFS= read -re line; do
    printf -v value $'%s%s\n' "$value" "$line"
done
# strip trailing newline
value="${value::-1}"

# prompt to confirm
if [ "$group" ]; then printf -v group $'\n  --as-group="%s" \\' "$group"; fi
if [ "$value" ]; then printf -v value $'\n  --value="%s" \\' "$value"; fi
printf -v command '%s variable create \%s
  --kind="%s" \
  --mime-type="%s" \%s
  "%s"' "$CONJUR_CMD" "$group" "$kind" "$mimetype" "$value" "$id"

printf '
CONFIRMATION
---
%s
---
' "$command"

while true; do
    read -e -p "Run command now? (Y/N) " correct
    case "$correct" in
        [Yy]* ) eval "$command"; break;;
        [Nn]* ) echo "quit"; exit 1;;
        *     ) echo "Enter Y or N";;
    esac
done
